<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Digital_Down_HTML 0.2.0</title>
    <style>
        body {
            font-family: 'Courier New', monospace;
            margin: 0;
            padding: 40px 20px;
            background: 
                linear-gradient(90deg, transparent 95%, #00aa0060 100%),
                linear-gradient(180deg, transparent 95%, #00aa0060 100%),
                radial-gradient(circle at 20% 80%, #001100 0%, #000000 50%),
                radial-gradient(circle at 80% 20%, #002200 0%, #000000 50%);
            background-size: 15px 15px, 15px 15px, 100% 100%, 100% 100%;
            background-color: #000;
            color: #00aa00;
            display: flex;
            flex-direction: column;
            align-items: center;
            min-height: 100vh;
            animation: flicker 0.1s infinite alternate;
            position: relative;
            overflow-x: hidden;
        }
        
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: repeating-linear-gradient(
                0deg,
                transparent,
                transparent 2px,
                rgba(0, 170, 0, 0.03) 2px,
                rgba(0, 170, 0, 0.03) 4px
            );
            pointer-events: none;
            z-index: 1;
        }
        
        body > * {
            position: relative;
            z-index: 2;
        }
        
        @keyframes flicker {
            0% { opacity: 1; }
            100% { opacity: 0.97; }
        }
        
        @keyframes glow {
            0% { text-shadow: 0 0 5px #00aa00; }
            50% { text-shadow: 0 0 15px #00aa00, 0 0 25px #00aa00; }
            100% { text-shadow: 0 0 5px #00aa00; }
        }
        
        @keyframes typing {
            from { width: 0; }
            to { width: 100%; }
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }
        
        @keyframes matrix {
            0% { transform: translateY(-100vh); opacity: 0; }
            10% { opacity: 1; }
            90% { opacity: 1; }
            100% { transform: translateY(100vh); opacity: 0; }
        }
        
        .matrix-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 0;
            overflow: hidden;
        }
        
        .matrix-char {
            position: absolute;
            color: #00aa00;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            opacity: 0.1;
            animation: matrix 10s linear infinite;
        }
        
        h1 {
            color: #00aa00;
            margin-bottom: 50px;
            font-size: 2em;
            text-align: center;
            animation: typing 3s steps(18, end), glow 2s ease-in-out infinite alternate;
            text-shadow: 0 0 10px #00aa00;
            position: relative;
            overflow: hidden;
            white-space: nowrap;
            border-right: 2px solid #00aa00;
            letter-spacing: 2px;
        }
        
        .categories-container {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-bottom: 30px;
            animation: float 6s ease-in-out infinite;
        }
        
        .category {
            text-align: center;
            min-width: 60px;
            transition: transform 0.3s ease;
        }
        
        .category:hover {
            transform: scale(1.05);
        }
        
        .category-title {
            font-size: 1em;
            font-weight: bold;
            color: #00aa00;
            padding-bottom: 5px;
            border-bottom: 1px solid #00aa00;
            margin-bottom: 12px;
            text-shadow: 0 0 5px #00aa00;
            position: relative;
        }
        
        .category-title::after {
            content: '';
            position: absolute;
            bottom: -1px;
            left: 50%;
            width: 0;
            height: 2px;
            background: linear-gradient(90deg, transparent, #00ff00, transparent);
            transition: all 0.3s ease;
            transform: translateX(-50%);
        }
        
        .category:hover .category-title::after {
            width: 100%;
        }
        
        .links {
            margin-top: 15px;
        }
        
        .links a {
            display: block;
            color: #00aa00;
            text-decoration: none;
            margin-bottom: 6px;
            font-size: 0.7em;
            font-weight: bold;
            border: 1px solid #00aa00;
            padding: 8px 12px;
            border-radius: 4px;
            box-shadow: 0 0 10px rgba(0, 170, 0, 0.3);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            background: linear-gradient(135deg, rgba(0, 170, 0, 0.05), rgba(0, 170, 0, 0.1));
        }
        
        .links a::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(0, 170, 0, 0.2), transparent);
            transition: left 0.5s;
        }
        
        .links a::after {
            content: '▶';
            position: absolute;
            right: 8px;
            top: 50%;
            transform: translateY(-50%);
            opacity: 0;
            transition: all 0.3s ease;
            font-size: 0.6em;
        }
        
        .links a:hover::before {
            left: 100%;
        }
        
        .links a:hover::after {
            opacity: 1;
            right: 6px;
        }
        
        .links a:hover {
            color: #00ff00;
            border-color: #00ff00;
            box-shadow: 0 0 20px rgba(0, 255, 0, 0.5);
            text-shadow: 0 0 5px #00ff00;
            transform: translateY(-2px) scale(1.02);
            background: linear-gradient(135deg, rgba(0, 255, 0, 0.1), rgba(0, 255, 0, 0.15));
        }
    </style>
</head>
<body>
    <div class="matrix-bg" id="matrix"></div>
    
    <h1>Digital_Down_HTML</h1>
    
    <div class="categories-container">
        <div class="category">
            <div class="category-title">Audio</div>
            <div class="links">
                <!-- Audio links will go here -->
            </div>
        </div>
        
        <div class="category">
            <div class="category-title">Image</div>
            <div class="links">
                <!-- Image links will go here -->
            </div>
        </div>
        
        <div class="category">
            <div class="category-title">Video</div>
            <div class="links">
                <!-- Video links will go here -->
            </div>
        </div>
        
        <div class="category">
            <div class="category-title">Text</div>
            <div class="links">
                <!-- Text links will go here -->
            </div>
        </div>
        
        <div class="category">
            <div class="category-title">Code</div>
            <div class="links">
                <a href="Angels-Or-Demons-0.1.0.html">Angels Or Demons</a>
                <a href="Mini-Deprecate-0.1.0.html">Mini-Deprecate</a>
            </div>
        </div>
    </div>

    <script>
        // Create matrix rain effect
        function createMatrix() {
            const matrix = document.getElementById('matrix');
            const chars = '01アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲン';
            
            function createChar() {
                const char = document.createElement('div');
                char.className = 'matrix-char';
                char.textContent = chars[Math.floor(Math.random() * chars.length)];
                char.style.left = Math.random() * 100 + '%';
                char.style.animationDelay = Math.random() * 10 + 's';
                char.style.animationDuration = (Math.random() * 10 + 5) + 's';
                matrix.appendChild(char);
                
                setTimeout(() => {
                    if (char.parentNode) {
                        char.parentNode.removeChild(char);
                    }
                }, 15000);
            }
            
            // Create initial characters
            for (let i = 0; i < 20; i++) {
                setTimeout(createChar, Math.random() * 5000);
            }
            
            // Continue creating characters
            setInterval(createChar, 500);
        }
        
        // Start matrix effect when page loads
        window.addEventListener('load', createMatrix);
        
        // Add glitch effect on title click
        document.querySelector('h1').addEventListener('click', function() {
            this.style.animation = 'none';
            this.style.transform = 'translateX(' + (Math.random() * 10 - 5) + 'px)';
            setTimeout(() => {
                this.style.animation = 'glow 2s ease-in-out infinite alternate, float 4s ease-in-out infinite';
                this.style.transform = 'translateX(0)';
            }, 100);
        });
    </script>
</body>
</html>
